spring.jpa.show-sql=true




Date deit = new Date();
			Long ykönen = new Long(1);
			Long viiskymppii = new Long(50);
			Kilpailu kilpailu = new Kilpailu("Parasmyynti", deit, "stadi");
			repo.save(kilpailu);
			Lohko lohko1 = new Lohko("1", repo.findByKilpailuId(ykönen), null);
			lore.save(lohko1);
			Kilpailija kilpailija = new Kilpailija("Matti", "Mattinen", 1, "Heego-Holia");
			kilrepo.save(kilpailija);
			Tuomari tuomari = new Tuomari("420", lohko1);
			Kriteeri kriteeri = new Kriteeri("miltä meno maistuu", 3);
			OsaAlue osalue = new OsaAlue("Esittely", viiskymppii, ykönen);
			ore.save(osalue);
			
			kripo.save(kriteeri);
			tuore.save(tuomari);
			
			Arviointi arviointi = new Arviointi(deit, kilpailija, tuomari);
			are.save(arviointi);
		
			System.out.println(repo.findAll());
			System.out.println(kripo.findAll());
			System.out.println(tuore.findAll());
			System.out.println(lore.findAll());
			System.out.println(ore.findAll());
			};
			
			
			<td><form th:action="@{'/poistakilpailija/'+${kilpailija.kilpailijaId}}">
<input type="hidden"  th:value="${kilpailija.kilpailijaId}">
<input id="deleteButton" type="submit" class="btn btn-primary" value="Poista">
</form></td>
			
			
			<td><a th:href="@{'/poistakilpailija/'+${kilpailija.kilpailijaId}}">Poista</a></td>
			
			
			
			
			
			<a th:href="@{/tuomarointi}">
			
			 <option value="asd" selected>Valitse:</option>
			 
			 
			 
			  <div class="col-lg-6 col-sm-6 col-xs-12" id="header">
                Kilpailija:
                <select name="kilpailija" id="kilpailija" th:each="kilpailija:${kilpailijat}">
                    <option value="asd" selected>Valitse:</option>
                    <option th:value="${kilpailija.sukunimi}"/><p th:text="${kilpailija.sukunimi}"></p></option>


                </select>
            </div>
            
            
            
            
            
            
            
            Date pvm = new Date();
			
			//Kilpailu
			
			Kilpailu bestseller = new Kilpailu("Bestseller 2019",pvm, "Turku" );
			repo.save(bestseller);
			
			//Ostaja
			Ostaja ostaja = new Ostaja("Tarja Halonen");
			ostajaRepo.save(ostaja);
			
			//Lohkot
			Lohko lohko1 = new Lohko("1", bestseller, ostaja);
			lohkoRepo.save(lohko1);
			Lohko lohko2 = new Lohko("2", bestseller, ostaja);
			lohkoRepo.save(lohko2);
			Lohko lohko3 = new Lohko("3", bestseller, ostaja);
			lohkoRepo.save(lohko3);
			Lohko lohko4 = new Lohko("4", bestseller, ostaja);
			lohkoRepo.save(lohko4);
			Lohko finaali = new Lohko("5", bestseller, ostaja);
			lohkoRepo.save(finaali);
			
			//Osa-alueet
			OsaAlue aloitus= new OsaAlue("Aloitus", "Myyntitapaamisen hyvä haltuunotto ja keskustelusuhteen luominen.", new Long(10), bestseller.getKilpailuId());
			osaalueRepo.save(aloitus);
			OsaAlue tarvekartoitus= new OsaAlue("Tarvekartoitus", "Saada tietoa asiakkaan tilanteesta ja tarpeista niin, että myyjä pystyy esittämään oman ratkaisunsa linkittyen asiakkaan tarpeisiin.", new Long(30), bestseller.getKilpailuId());
			osaalueRepo.save(tarvekartoitus);
			OsaAlue ratkaisu= new OsaAlue("Ratkaisun esittäminen", "Ratkaisun ja sen hyötyjen esittäminen.", new Long(25), bestseller.getKilpailuId());
			osaalueRepo.save(ratkaisu);
			OsaAlue asiakaskys= new OsaAlue("Asiakkaan kysymysten käsittely", "Asiakkaan esittämien kysymyksien käsittely sekä mahdollisten huolien ja epäilyjen poistaminen.", new Long(10), bestseller.getKilpailuId());
			osaalueRepo.save(asiakaskys);
			OsaAlue paattaminen= new OsaAlue("Päättäminen", "Ymmärtää, miten asian käsittely etenee ja missä päätöksenteon kannalta ollaan sekä sopia jatkosta.", new Long(10), bestseller.getKilpailuId());
			osaalueRepo.save(paattaminen);
			OsaAlue yleisvaikutelma= new OsaAlue("Yleisvaikutelma. Viestintä- ja vuorovaikutustaidot.", "", new Long(10), bestseller.getKilpailuId());
			osaalueRepo.save(yleisvaikutelma);
			
			//kriteerit
			
			
			
			//kilpailijat
			Kilpailija kil1 = new Kilpailija("Tiivi", "Taavi", 1, "Haaga-Helia", lohko1, new Long(1));
			kilpailijaRepo.save(kil1);
			Kilpailija kil2 = new Kilpailija("Hip", "Su", 2, "Haaga-Helia", lohko1, new Long(1));
			kilpailijaRepo.save(kil2);
			Kilpailija kil3 = new Kilpailija("Laa", "Laaa", 3, "Haaga-Helia", lohko2, new Long(1));
			kilpailijaRepo.save(kil3);
			Kilpailija kil4 = new Kilpailija("Pai", "Ai", 4, "Haaga-Helia", lohko2, new Long(1));
			kilpailijaRepo.save(kil4);
			
			//tuomarit
			Tuomari tuo1 = new Tuomari("1", "1", bestseller.getKilpailuId());
			tuomarirepo.save(tuo1);
			Tuomari tuo2 = new Tuomari("2", "1", bestseller.getKilpailuId());
			tuomarirepo.save(tuo2);
			Tuomari tuo3 = new Tuomari("3", "2", bestseller.getKilpailuId());
			tuomarirepo.save(tuo3);
			Tuomari tuo4 = new Tuomari("4", "3", bestseller.getKilpailuId());
			tuomarirepo.save(tuo4);
			Tuomari tuo5 = new Tuomari("5", "4", bestseller.getKilpailuId());
			tuomarirepo.save(tuo5);